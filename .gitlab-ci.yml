stages:
  - build
  - deploy

build_homol:
  stage: build
  image: node:12.22.12-alpine
  before_script:
    - apk update && apk add git
    - sh libs-credencials-manager.sh
    - npm install
  script:
    - ./node_modules/.bin/ng build --configuration=homol --output-path=dist/homol --verbose
  artifacts:
    paths:
      - dist/homol
  only:
    - deploy

build_production:
  stage: build
  image: node:12.22.12-alpine
  before_script:
    - apk update && apk add git
    - sh libs-credencials-manager.sh
    - npm install
  script:
    - ./node_modules/.bin/ng build --configuration=production --output-path=dist/prod --verbose
  artifacts:
    paths:
      - dist/prod
  only:
    - deploy-prod

deploy_homol:
  stage: deploy
  environment: homol
  image: google/cloud-sdk:alpine
  dependencies:
    - build_homol
  script:
    - cd dist/homol
    - echo $SERVICE_ACCOUNT > /tmp/$CI_PIPELINE_GCLOUD_STAG.json
    - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_GCLOUD_STAG.json
    - gcloud --quiet --project $PROJECT_ID app deploy app.yaml --verbosity=debug
  only:
    - deploy

deploy_production:
  stage: deploy
  environment: prod
  image: google/cloud-sdk:alpine
  dependencies:
    - build_production
  script:
    - cd dist/prod
    - echo $SERVICE_ACCOUNT > /tmp/$CI_PIPELINE_GCLOUD_STAG.json
    - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_GCLOUD_STAG.json
    - gcloud --quiet --project $PROJECT_ID app deploy app.yaml --verbosity=debug
  only:
    - deploy-prod

after_script:
  - rm /tmp/$CI_PIPELINE_GCLOUD_STAG.json